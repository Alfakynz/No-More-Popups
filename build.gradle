plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.shedaniel.me"}
	maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "id", project.mod_id
    inputs.property "name", project.mod_name
    inputs.property "license", project.mod_license
    inputs.property "description", project.mod_description
    inputs.property "author", project.mod_author
    inputs.property "fabric", project.loader_version
    inputs.property "minecraft", project.minecraft_version

    filesMatching("fabric.mod.json") {
        expand(
                "version": project.version,
                "license": project.mod_license,
                "id": project.mod_id,
                "name": project.mod_name,
                "description": project.mod_description,
                "author": project.mod_author,
                "fabric": project.loader_version,
                "minecraft": project.minecraft_version
        )
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
    withJavadocJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}